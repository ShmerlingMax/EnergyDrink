plugins {
    id 'java'
    id 'application'
    id 'net.ltgt.errorprone' version '2.0.2'
    id 'checkstyle'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

group 'org.example'
version '1.0-SNAPSHOT'


dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    errorprone 'com.google.errorprone:error_prone_core:2.15.0'
    checkstyle 'com.puppycrawl.tools:checkstyle:10.3.3'

    implementation 'org.slf4j:slf4j-api:2.0.0'
    implementation 'ch.qos.logback:logback-classic:1.4.0'
    implementation 'org.slf4j:log4j-over-slf4j:2.0.0'

    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    implementation 'ru.odnoklassniki:one-nio:1.5.0'

    implementation group: 'org.iq80.leveldb', name: 'leveldb', version: '0.12'


    implementation 'org.rocksdb:rocksdbjni:7.5.3'

    // https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver
    implementation group: 'org.mongodb', name: 'mongo-java-driver', version: '3.12.11'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

def incubatorArgs = ["--add-modules", "jdk.incubator.foreign"]

application {
    mainClass = 'server.Server'
}

test {
    maxHeapSize = "128m"
    useJUnitPlatform()
}

configurations {
    extraLibs
}

run {
    application
}

jar {
    manifest {
        attributes "Main-Class": "server.Server"
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

shadowJar {
    archiveBaseName.set("shadow")
    archiveClassifier.set('')
    archiveVersion.set('')
}

checkstyle {
    configFile = new File("checkstyle.xml")
    checkstyleTest.enabled = false
}

tasks.withType(JavaCompile) {
    options.compilerArgs += incubatorArgs
}

tasks.withType(Test) {
    jvmArgs += incubatorArgs
}
